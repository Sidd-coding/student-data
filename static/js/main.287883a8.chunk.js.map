{"version":3,"sources":["Component/Avatar.js","Component/Profile.js","Component/Stunote.js","Component/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Avatar","props","className","src","image","alt","style","width","Profile","name","date","d","Date","getMonth","getDate","dateFormat","time","Stunote","data","note","Header","console","log","student","remaining_time","studata","map","datastu","index","App","useState","setStudent","React","useEffect","fetch","then","results","json","record","student_details","first_name","middle_name","last_name","profile_picture","completed_datetime","answers","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAYeA,EATA,SAACC,GACZ,OACI,qBACIC,UAAU,8BACVC,IAAKF,EAAMG,MACXC,IAAI,UAAUC,MAAO,CAAEC,MAAO,UCe3BC,EApBC,SAACP,GAOb,OACI,sBAAKC,UAAU,aAAf,UACI,oBAAIA,UAAU,GAAd,SACKD,EAAMQ,OAEX,uBAAMP,UAAU,iBAAhB,2BAVW,SAACQ,GAChB,IAAMC,EAAI,IAAIC,KAAKF,GACnB,MAAM,GAAN,OAAUC,EAAEE,WAAa,EAAzB,YAA8BF,EAAEG,WASTC,CAAWd,EAAMe,aCMjCC,MAnBf,SAAiBhB,GAAQ,IAAD,EACpB,OACI,qBAAKC,UAAU,OAAf,SACI,yCACKD,EAAMiB,YADX,aACK,EAAYC,UC6BdC,EA7BA,SAACnB,GAAW,IAAD,EAEtB,OADAoB,QAAQC,IAAIrB,EAAMsB,SAEd,sBAAKrB,UAAU,OAAf,UAEI,qBAAKA,UAAU,uBAAf,SACI,qBAAIA,UAAU,cAAd,wBACgBD,EAAMsB,QAAQd,UAGlC,qBAAKP,UAAU,YAAf,SACI,qBAAKA,UAAU,oBAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,qCAAf,UACI,cAAC,EAAD,CAAQE,MAAOH,EAAMsB,QAAQnB,QAC7B,cAAC,EAAD,CAASK,KAAMR,EAAMsB,QAAQd,KAAMO,KAAMf,EAAMsB,QAAQC,0BAZ3E,UAiBKvB,EAAMsB,QAAQE,eAjBnB,aAiBK,EAAuBC,KAAI,SAACC,EAASC,GAAV,OACxB,cAAC,EAAD,CAASV,KAAMS,GAAcC,UCiB9BC,MAtCf,WAEE,MAA8BC,mBAAS,CAErCrB,KAAM,GACNL,MAAO,GACPoB,eAAgB,GAChBC,QAAS,KALX,mBAAOF,EAAP,KAAgBQ,EAAhB,KA0BA,OAlBAC,IAAMC,WAAU,WACdC,MAAM,8EACHC,MAAK,SAAAC,GAAO,OAAIA,EAAQC,UACxBF,MAAK,SAAAG,GACJjB,QAAQC,IAAIgB,GACZ,MAAgEA,EAAOC,gBAA/DC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,YAAaC,EAAjC,EAAiCA,UAAWC,EAA5C,EAA4CA,gBAI5CZ,EAAW,CACTtB,KAAK,GAAD,OAAK+B,EAAL,YAAmBC,EAAnB,YAAkCC,GACtCtC,MAAOuC,EACPnB,eAAgBc,EAAOM,mBACvBnB,QAASa,EAAOO,eAGrB,IAGD,qBAAK3C,UAAU,MAAf,SACE,cAAC,EAAD,CAAQqB,QAASA,OCzBRuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.287883a8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Avatar = (props) => {\r\n    return (\r\n        <img\r\n            className=\"card-img m-3 rounded-circle\"\r\n            src={props.image}\r\n            alt=\"Student\" style={{ width: \"18%\" }} />\r\n    );\r\n}\r\n\r\nexport default Avatar;","import React from 'react';\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    const dateFormat = (date) => {\r\n        const d = new Date(date);\r\n        return `${d.getMonth() + 1}/${d.getDate()}`\r\n    }\r\n\r\n    return (\r\n        <div className=\"card-body \">\r\n            <h4 className=\"\">\r\n                {props.name}\r\n            </h4>\r\n            <span className=\"text-secondary\">\r\n                Notes left on {dateFormat(props.time)}\r\n            </span>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\n\r\n\r\nfunction Stunote(props) {\r\n    return (\r\n        <div className=\"m-2 \">\r\n            <span>\r\n                {props.data?.note}\r\n                {/* <span className=\"\">\r\n                    {props.data?.category}\r\n                </span> */}\r\n                {/* {props.data?.choices?.map(choice => <div key={choice.id}>\r\n\r\n                    <div>\r\n                        {choice.emoji} {choice.name}\r\n                    </div>\r\n                </div>)} */}\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Stunote;","import React from 'react';\r\nimport Avatar from './Avatar';\r\nimport Profile from './Profile';\r\nimport Stunote from './Stunote';\r\n\r\n\r\n\r\nconst Header = (props) => {\r\n    console.log(props.student);\r\n    return (\r\n        <div className=\"card\">\r\n\r\n            <div className=\"card-header bg-white\" >\r\n                <h3 className=\"text-center\">\r\n                    Notes from {props.student.name}\r\n                </h3>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <div className=\"card border-white\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4 d-flex align-items-center\">\r\n                            <Avatar image={props.student.image} />\r\n                            <Profile name={props.student.name} time={props.student.remaining_time} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {props.student.studata?.map((datastu, index) => (\r\n                <Stunote data={datastu} key={index} />\r\n            ))}\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Header;","import React, { useState } from 'react';\n\nimport './App.css';\nimport Header from './Component/Header';\n\n\n\nfunction App() {\n\n  const [student, setStudent] = useState({\n    //dummy data\n    name: '',\n    image: '',\n    remaining_time: '',\n    studata: []\n  });\n\n  React.useEffect(() => {\n    fetch(\"https://my-json-server.typicode.com/e-developersworld/dummy_notes/noteInfo\")\n      .then(results => results.json())\n      .then(record => {\n        console.log(record);\n        const { first_name, middle_name, last_name, profile_picture } = record.student_details;\n\n\n        //default data \n        setStudent({\n          name: `${first_name} ${middle_name} ${last_name}`,\n          image: profile_picture,\n          remaining_time: record.completed_datetime,\n          studata: record.answers\n        })\n      });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Header student={student} />\n\n    </div>\n  );\n}\n\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}